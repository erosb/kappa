import java.nio.charset.StandardCharsets

plugins {
  id "java"
  id "java-library"
  id "org.sonarqube" version "2.8"
  id 'jacoco'
  id 'maven-publish'
  id 'signing'
  id("io.github.gradle-nexus.publish-plugin") version "2.0.0"
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'jacoco'

  group = "com.github.erosb"
  version = "2.0.0-RC11"
  description = "Forked version of openapi4j aiming for openapi 3.1 support"

  java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }
  compileJava.options.encoding = StandardCharsets.UTF_8.toString()

  tasks.withType(JavaCompile) {
    options.encoding = StandardCharsets.UTF_8.toString()
  }

  repositories {
    mavenCentral()
    mavenLocal()
  }

  jar {
    manifest {
      attributes 'Build-date': new Date()
      attributes 'Implementation-Title': project.name
      attributes 'Implementation-Version': project.version
    }
  }
}

dependencies {
  api("com.fasterxml.jackson.core:jackson-databind:2.18.0")
  api("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.0")

  api("com.github.erosb:json-sKema:0.22.0")

  testImplementation("junit:junit:4.13.2")
  testImplementation("org.skyscreamer:jsonassert:1.5.0")

  compileOnly("org.json:json:20240303")
  compileOnly("commons-fileupload:commons-fileupload:1.5")
  testImplementation("org.json:json:20240303")
  testImplementation("commons-fileupload:commons-fileupload:1.5")
}


sonarqube {
  properties {
    property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      logger.warn(project.group + " : " + project.name + " : " + project.version)
      logger.warn(project.description)

      groupId = project.group
      artifactId = project.name
      version = project.version

      from components.java
      artifact sourcesJar
      artifact javadocJar
      pom {
        name = project.name
        description = project.description
        url = "https://github.com/erosb/kappa"
        licenses {
          license {
            name = "Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = 'erosb'
            name = 'Bence Eros'
            email = 'ebence88@gmail.com'
          }
        }
        scm {
          connection = "scm:git:git://github.com:erosb/kappa.git"
          developerConnection = "scm:git:https://github.com/erosb/kappa"
          url = "https://github.com/erosb/kappa"
        }
      }
    }
  }
}

tasks.withType(Sign) {
  onlyIf { !version.endsWith("SNAPSHOT") }
}

signing {
  useGpgCmd()
  sign publishing.publications.mavenJava
}


nexusPublishing {
  repositories {
    sonatype {
      username = System.getenv("publishUsername")
      password = System.getenv("publishPassword")
    }
  }
}
